name: Build&Upload

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  Python_Version: '3.10'


jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}
      - name: Install dependencies 
        run: |
           pip install --upgrade pip wheel setuptools build
      - name: Build sdist
        run: |
          python -m build --sdist --outdir ./dist
      - uses: actions/upload-artifact@v3
        with:
          name: WHEEL
          path: dist/*.tar.gz
          retention-days: 30
          
  build_wheels:
    name: Build wheels ${{ matrix.os }} ${{ matrix.arch }} 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false 
      matrix:  
        include:
          - os: ubuntu-latest
            arch: x86_64
            CIBW_PLATFORM: linux
            CIBW_ENVIRONMENT: "CFLAGS='-march=haswell' CXXFLAGS='-march=haswell' FFLAGS='-march=haswell'"
          - os: ubuntu-latest
            arch: aarch64
            CIBW_PLATFORM: linux 
            CIBW_ENVIRONMENT: ""
            
          - os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos  
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='11.0'"
          - os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos  
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='10.16'"
          - os: macos-latest
            arch: arm64
            CIBW_PLATFORM: macos
            CIBW_ENVIRONMENT: ""
            
          - os: windows-latest
            arch: AMD64
            CIBW_PLATFORM: windows 
            CIBW_ENVIRONMENT: "CFLAGS='-march=haswell' CXXFLAGS='-march=haswell' CMAKE_TOOLCHAIN_FILE='C:/vcpkg/scripts/buildsystems/vcpkg.cmake'"
            
    steps:
      - uses: actions/checkout@v3       
      - name: Add msbuild to PATH
        if: ${{ matrix.os == 'windows-latest'}}
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Prepare Cache 
        if: ${{ matrix.os == 'windows-latest'}}
        shell: bash 
        run: |
          set -eux
          ls  C:/vcpkg
          MSBuild.exe -version > msbuild_version.txt
          cat msbuild_version.txt
      - name: Cache vcpkg
        uses: actions/cache@v3
        if: ${{ matrix.os == 'windows-latest'}}
        with:
           path: |
             C:/Users/runneradmin/AppData/Local/vcpkg/archives
           key: ${{ matrix.os }}-vcpkg-${{ hashFiles('msbuild_version.txt') }}
           restore-keys: |
             ${{ matrix.os }}-vcpkg-${{ hashFiles('msbuild_version.txt') }}
             ${{ matrix.os }}-vcpkg
      - name: Set up QEMU
        if: ${{ matrix.CIBW_PLATFORM == 'linux' && matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        if: ${{ matrix.os  == 'ubuntu-latest' }}
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
            install: true
      - name: Build wheels on ${{ matrix.CIBW_PLATFORM }} ${{matrix.arch}}
        uses: pypa/cibuildwheel@2.7.0
        env:
          CIBW_ENVIRONMENT: ${{ matrix.CIBW_ENVIRONMENT }}
          CIBW_PLATFORM:  ${{ matrix.CIBW_PLATFORM }}
          CIBW_BUILD: ${{matrix.CIBW_BUILD}}
          CIBW_ARCHS: ${{matrix.arch}}
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7"
          
      - uses: actions/upload-artifact@v3
        with:
          name: WHEEL
          path: ./wheelhouse/*.whl
          retention-days: 30 

          
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: ${{github.event_name == 'release'}}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: WHEEL
          path: ./dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
          packages_dir: ./dist
          verify_metadata: true
          skip_existing: false
          verbose: true
