name: Build Documentation

on:
  workflow_dispatch:
  release:
    types:
      - released

env:
  Python_Version: '3.10'

jobs:
  build_docs:
    name: Build Documentation 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}
      - name: Python Cache Key
        shell: bash
        run: |
          echo $(which python) > /tmp/python_version.txt
      - name: Get pip cache dir
        shell: bash
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3
        with:
           path: ${{ steps.pip-cache.outputs.dir }}
           key: ${{ runner.os }}-pip-${{ hashFiles('/tmp/python_version.txt') }}
           restore-keys: |
              ${{ runner.os }}-pip-
      - name: Update
        run: | 
         pip install --upgrade pip wheel setuptools build cmake ninja
      - name: Install Dep
        run: | 
         sudo apt-get install -y libeigen3-dev lcov doxygen graphviz mscgen dia
      - name: Prepare 
        shell: bash
        run: mkdir build
      - name: CMake Configure
        shell: bash
        run: >
          cmake 
          -DCMAKE_BUILD_TYPE=Debug 
          -DBUILD_DOCS=ON
          -DENABLE_COVERAGE=On
          -S .
          -B build
          --target cxxcimod_header_only_docs
      - name: CMake Build
        shell: bash
        run: >
          cmake  
          --build build
          --parallel
      #- name: CMake Test
      #  shell: bash
      #  working-directory: build
      #  run: >
      #    ctest
      #    --extra-verbose
      #    --parallel
      #    --schedule-random
      - name: du -a 
        shell: bash
        if: always()
        run: |
          du -a
