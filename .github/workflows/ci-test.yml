name: Test

on: 
  workflow_dispatch:
  push:
    branches: [master, main]
  pull_request: 
    types: [opened, reopened, synchronize]

jobs:
  build:
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version : ${{ matrix.python-version }}
    - name: Get Python Version
      shell: bash
      run: |
          set -eux
          python --version > python_version.txt
          cat python_version.txt
    - name: Pip-Tools 
      shell: bash
      run: |
          python -m pip install pip-tools 
          pip-compile ci-requirement.in
    - uses: actions/cache@v3
      with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-${{ hashFiles('setup.cfg') }}-pip-${{ github.base_ref }}-${{ hashFiles('python_version.txt') }}-${{ hashFiles('ci-requirement.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('setup.cfg') }}-pip-${{ github.base_ref }}-${{ hashFiles('python_version.txt') }}-${{ hashFiles('ci-requirement.txt') }}
            ${{ runner.os }}-${{ hashFiles('setup.cfg') }}-pip-${{ github.base_ref }}-${{ hashFiles('python_version.txt') }}
            ${{ runner.os }}-${{ hashFiles('setup.cfg') }}-pip-${{ github.base_ref }}
    - name: Update
      shell: bash
      run: |
          set -ux
          python -m pip install --upgrade pip setuptools wheel build
    - name: Install Dependencies
      shell: bash
      run: |
          set -eux
          pip-sync ci-requirement.txt
    - name: Install Eigen3 on ${{ matrix.os }}
      if: ${{ matrix.os == 'ubuntu-latest'}}
      run: sudo apt-get install -y libeigen3-dev
    - name: Install Eigen3 on ${{ matrix.os }}
      if: ${{ matrix.os == 'macos-latest'}}
      run: brew install eigen
    - name: Show Help
      shell: bash
      run: |
        python setup.py --help-commands
    #- name: Show Help Test
    #  shell: bash
    #  run: |
    #    python setup.py test --help-commands
    # python setup.py --force-cmake --build-type Debug install
    - name: Test 
      shell: bash
      run: |
        set -eux
        python setup.py --force-cmake --build-type Debug install
        python setup.py --build-type Debug test 
    - name: du
      if: always()
      shell: bash
      run: |
        du -a
