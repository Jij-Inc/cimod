[build-system]
requires = [
   'setuptools_scm[toml]', 
   'setuptools',
   'wheel',
   'build',
   'cmake',
   'pytest-runner',
   'pybind11',
   'scikit-build',
   ]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "_version.py"

[tool.pytest.ini_options]
addopts = "-vv -s --doctest-modules --diff-symbols --color=yes --code-highlight=yes --cov-context=test --cov --cov-append --cov-report term --randomly-seed=last -v --capture=no"
testpaths = [
    "tests",
]
spec_header_format = "{module_path}:"
spec_test_format = "{result} {name}"
log_level = "INFO"
console_output_style = "count"
log_auto_indent = true
junit_logging = "all"

[tool.flake8] 
show-source = true
statistics = true
doctests = true
max-complexity = 10
max-line-length = 999 

[tool.isort]
profile= "black"
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = false
ensure_newline_before_comments = true
use_parentheses = true 
balanced_wrapping = false
lines_between_types = 1
#order_by_type = true 
combine_as_imports = true
combine_star = true
combine_straight_imports = true
group_by_package = true
auto_identify_namespace_packages = true
src_paths = ["openjij", "tests"]

[tool.black]
target-version = ['py39', 'py310']

[tool.mypy]
ignore_missing_imports = true
#show_traceback = true
warn_return_any = true
warn_unused_configs = true
warn_unreachable = true
namespace_packages = true
explicit_package_bases = true
#show_error_context = true 
#show_column_numbers = true

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "basic"
include = [
    "cimod", 
    "tests",
  ]
ignore = [ 
  "*.c", 
  "*.so",
]
reportImportCycles = 'warning'
reportUnusedImport = 'warning'
reportUnusedVariable =  'warning'
reportDuplicateImport = 'warning'

[tool.cibuildwheel]
skip = ["cp36*", "pp*"]
build-verbosity = 1

[tool.cibuildwheel.linux]
archs = ["auto64", "aarch64"]
build-frontend = "build"
environment = "CFLAGS='-flto -O3 -pipe' CXXFLAGS='-flto -O3 -pipe'"
manylinux-x86_64-image ="quay.io/pypa/manylinux_2_28_x86_64:latest"
manylinux-aarch64-image = "quay.io/pypa/manylinux_2_28_aarch64:latest"
before-all = [ 
    "dnf config-manager --set-enabled powertools",
    "dnf makecache --refresh",
    "dnf -y install cmake",
    "dnf -y install gcc-toolset-11", 
    "dnf -y --enablerepo=powertools install eigen3-devel",
    "dnf -y --enablerepo=powertools install ninja-build", 
]
before-build = [ 
    "source scl_source enable gcc-toolset-11",
    "pip install pybind11", 
]
repair-wheel-command = "auditwheel repair --lib-sdir . -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
archs = ["x86_64", "universal2", "arm64"]
build-frontend = "build"
before-all = [ 
    "brew install eigen",
    "brew install ninja", 
    "brew install cmake",
]
environment = "CFLAGS='-flto -O3 -pipe -lcblas -lclapack -framework Accelerate -framework OpenCL' CXXFLAGS='-flto -O3 -pipe -lcblas -lclapack -framework Accelerate -framework OpenCL'" 
before-build = [ 
    "pip install pybind11", 
]

[tool.cibuildwheel.windows]
archs = ["auto64"]
build-frontend = "build"
environment = "CFLAGS='-flto -O3 -pipe' CXXFLAGS='-flto -O3 -pipe'" 
before-build = [ 
    "pip install cmake pybind11 delvewheel", 
]
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"
